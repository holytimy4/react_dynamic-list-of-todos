{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onTodoSelect","selectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","filter","setSearchQuery","searchQuery","clearSearch","onChange","value","placeholder","event","target","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","clear","useState","user","setUser","useEffect","userId","href","email","name","App","todosList","setTodosList","setSelectedTodo","filteredTodos","setFilteredTodos","visibleTodos","preparedQuery","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59296596.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  onTodoSelect: (todo: Todo) => void;\n  selectedTodo: Todo | null;\n}\n\nexport const TodoList: React.FC<Props> = (\n  { todos, onTodoSelect, selectedTodo },\n) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      { todos\n        && todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': todo === selectedTodo,\n            })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            {todo.completed\n              ? (\n                <>\n                  <td className=\"is-vcentered\">\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  </td>\n                  <td className=\"is-vcentered is-expanded\">\n                    <p className=\"has-text-success\">{todo.title}</p>\n                  </td>\n                </>\n              )\n              : (\n                <>\n                  <td className=\"is-vcentered\" />\n                  <td className=\"is-vcentered is-expanded\">\n                    <p className=\"has-text-danger\">{todo.title}</p>\n                  </td>\n                </>\n              )}\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onTodoSelect(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far',\n                    {\n                      'fa-eye': todo !== selectedTodo,\n                      'fa-eye-slash': todo === selectedTodo,\n                    },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n    </tbody>\n  </table>\n);","import React from 'react';\n\ninterface Props {\n  filter: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n  setSearchQuery: (query: string) => void;\n  searchQuery: string;\n  clearSearch: () => void;\n}\n\nexport const TodoFilter: React.FC<Props> = (\n  {\n    filter, setSearchQuery, searchQuery, clearSearch,\n  },\n) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span\n          className=\"select\"\n        >\n          <select\n            data-cy=\"statusSelect\"\n            onChange={filter}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchQuery}\n          onChange={event => setSearchQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {\n          searchQuery && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={clearSearch}\n              />\n            </span>\n          )\n        }\n      </p>\n    </form>\n  );\n};","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json())\n    .then(todos => todos);\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ninterface Props {\n  todo: Todo;\n  clear: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({ todo, clear }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      { !todo ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => clear()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? (\n                  <strong className=\"has-text-success\">\n                    Done\n                  </strong>\n                )\n                : (\n                  <strong className=\"has-text-danger\">\n                    Planned\n                  </strong>\n                )}\n\n              {' by '}\n\n              { user\n                ? (\n                  <a href={`mailto:${user.email}`}>\n                    {user.name}\n                  </a>\n                )\n                : (<Loader />)}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todosList, setTodosList] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filteredTodos, setFilteredTodos] = useState<string>('');\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  useEffect(() => {\n    getTodos().then(setTodosList);\n  }, []);\n\n  let visibleTodos = [...todosList];\n\n  if (filteredTodos) {\n    switch (filteredTodos) {\n      case 'all':\n        visibleTodos = todosList;\n        break;\n      case 'active':\n        visibleTodos = visibleTodos.filter(todo => todo.completed === false);\n        break;\n      case 'completed':\n        visibleTodos = visibleTodos.filter(todo => todo.completed === true);\n        break;\n      default:\n        break;\n    }\n  }\n\n  if (searchQuery) {\n    const preparedQuery = searchQuery.toLowerCase();\n\n    visibleTodos = visibleTodos.filter(todo => todo.title.toLowerCase().includes(preparedQuery));\n  }\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilteredTodos(event.target.value);\n  };\n\n  const onTodoSelect = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const clear = () => {\n    setSelectedTodo(null);\n  };\n\n  const clearSearch = () => {\n    setSearchQuery('');\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter filter={handleSelect} setSearchQuery={setSearchQuery} searchQuery={searchQuery} clearSearch={clearSearch} />\n            </div>\n\n            {visibleTodos.length !== 0 ? (\n              <div className=\"block\">\n                <TodoList todos={visibleTodos} onTodoSelect={onTodoSelect} selectedTodo={selectedTodo} />\n              </div>\n            )\n              : (<Loader />)}\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal todo={selectedTodo} clear={clear} />}\n    </>\n  );\n};","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}